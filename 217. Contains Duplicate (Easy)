//Brute Force
class Solution {
    public boolean containsDuplicate(int[] nums) {
        for(int i = 0; i < nums.length; i++){
            for(int j = i+1; j < nums.length; j++){
                 if(nums[j] == nums[i])
                    return true;
            }
        }
        return false;
    }
}

//Inefficient solution using Sorting
class Solution {
    public boolean containsDuplicate(int[] nums) {
        Arrays.sort(nums);
        for(int i = 0; i < nums.length-1; i++){
            if(nums[i] == nums[i+1])
                return true;
        }
        return false;
    }
}

//Really good solution using Hash
class Solution {
    public boolean containsDuplicate(int[] nums) {
        Set<Integer> numbers = new HashSet<Integer>();
        for(int i = 0; i < nums.length; i++){
            if(numbers.contains(nums[i]))
                return true;
            numbers.add(nums[i]);
        }
        return false;
    }
}
